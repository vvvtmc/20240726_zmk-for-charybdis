#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt { flavor = "balanced"; };

/ {
    tdDel: DEL_BSPACE {
        compatible = "zmk,behavior-tap-dance";
        label = "del_bspace";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp BSPC>, <&kp DEL>;
    };

    combos {
        compatible = "zmk,combos";

        princ_combo {
            bindings = <&princ>;
            key-positions = <19 20 21>;
            timeout-ms = <30>;
        };

        Bluetooth_layer {
            bindings = <&bootloader>;
            key-positions = <13 22>;
            timeout-ms = <30>;
            layers = <2>;
        };

        Fn_layer_combo {
            bindings = <&sl 3>;
            key-positions = <50 51>;
        };

        z {
            bindings = <&kp Z>;
            key-positions = <21 22>;
            layers = <0>;
        };

        T1 {
            bindings = <&mkp MB1>;
            key-positions = <49 28>;
            layers = <0>;
        };

        T2 {
            bindings = <&kp BACKSPACE>;
            key-positions = <49 27>;
            layers = <0>;
        };

        T3 {
            bindings = <&kp ENTER>;
            key-positions = <49 26>;
            layers = <0>;
        };

        T4 {
            bindings = <&mkp MB2>;
            key-positions = <49 25>;
        };

        S1 {
            bindings = <&mkp MB1>;
            key-positions = <31 52>;
            layers = <0>;
        };

        S2 {
            bindings = <&kp BACKSPACE>;
            key-positions = <32 52>;
            layers = <0>;
        };

        S3 {
            bindings = <&kp ENTER>;
            key-positions = <52 33>;
            layers = <0>;
        };

        S4 {
            bindings = <&kp DELETE>;
            key-positions = <52 34>;
            layers = <0>;
        };

        layer3 {
            bindings = <&sl 3>;
            key-positions = <49 52>;
        };
    };

    macros {
        princ: princ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp EXCL &kp AT &kp POUND &kp DLLR &kp PRCNT &kp CARET &kp N1 &kp N2 &kp N3 &kp LS(P) &kp R &kp I &kp N &kp C &kp RET>;
            label = "PRINC";
        };

        small_para: small_para {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LPAR &kp RPAR &kp LEFT>;
            label = "SMALL_PARA";
        };

        mid_brkt: mid_brkt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LBKT &kp RIGHT_BRACKET &kp LEFT>;
            label = "MID_BRKT";
        };

        double_quote: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp DQT &kp DQT &kp LEFT_ARROW>;
            label = "NEW_MACRO";
        };

        big_brkt: big_brkt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "BIG_BRKT";
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&none      &none       &none           &none           &none        &none                  &none                   &none        &none         &none           &none       &none
&none      &kp J       &kp G           &kp M           &kp P        &none                  &none                   &kp V        &kp W         &kp B           &kp Q       &none
&kp SLASH  &kp R       &kp S           &kp N           &kp D        &mt SEMICOLON COMMA    &mt EXCLAMATION PERIOD  &kp A        &kp E         &kp I           &kp H       &kp PERIOD
&none      &mt LWIN X  &mt LEFT_ALT F  &mt LSHIFT L    &mt LCTRL C  &none                  &none                   &mt LCTRL U  &mt LSHIFT O  &mt LEFT_ALT Y  &mt LWIN K  &none
                                       &sk LEFT_SHIFT  &lt 1 T      &mo 1                  &mo 2                   &lt 2 SPACE
                                                       &none        &none                  &none
            >;

            trackball-bindings = <&tmv_coarse>;
        };

        NUM {
            bindings = <
&none          &none           &none                   &none             &none            &none          &none      &none               &none                &none                  &none            &none
&none          &kp SLASH       &kp ASTERISK            &kp MINUS         &kp PLUS         &none          &none      &kp NUMBER_7        &kp NUMBER_8         &kp NUMBER_9           &kp PERCENT      &none
&double_quote  &mkp MB2        &kp ENTER               &kp BACKSPACE     &mkp MB1         &small_para    &mid_brkt  &kp NUMBER_4        &kp N5               &kp NUMBER_6           &kp NUMBER_0     &big_brkt
&none          &mt LWIN TILDE  &mt LEFT_ALT AMPERSAND  &mt LSHIFT CARET  &mt LCTRL EQUAL  &none          &none      &mt LCTRL NUMBER_1  &mt LSHIFT NUMBER_2  &mt LEFT_ALT NUMBER_3  &mt LWIN PERIOD  &none
                                                       &trans            &trans           &trans         &trans     &mt LA(F4) ESC
                                                                         &none            &none          &none
            >;

            //trackball-bindings = <&tmv_fine>;//精准指针

            trackball-bindings = <&tmv_coarse>;
        };

        NAV {
            bindings = <
&none   &none              &none                 &none                 &none                &none                &none            &none          &none           &none         &none          &none
&none   &kp LC(MINUS)      &kp LC(PG_UP)         &kp LC(TAB)           &kp LC(EQUAL)        &none                &none            &kp BACKSLASH  &kp UNDERSCORE  &kp SQT       &kp LA(LS(D))  &none
&trans  &kp LEFT_ARROW     &kp UP_ARROW          &kp DOWN_ARROW        &kp RIGHT_ARROW      &kp C_VOLUME_DOWN    &kp C_VOLUME_UP  &mkp MB1       &kp BACKSPACE   &kp ENTER     &kp DELETE     &trans
&none   &mt LEFT_WIN HOME  &mt LEFT_ALT PAGE_UP  &mt LSHIFT PAGE_DOWN  &mt LCTRL END        &none                &none            &sk LCTRL      &sk LSHIFT      &sk LEFT_ALT  &sk LWIN       &none
                                                 &trans                &mt LA(LC(TAB)) TAB  &trans               &trans           &trans
                                                                       &none                &none                &none
            >;
        };

        FN {
            bindings = <
&none  &none     &none         &none       &none      &none     &none   &none   &none   &none   &none    &none
&none  &none     &none         &none       &none      &none     &none   &kp F7  &kp F8  &kp F9  &kp F11  &none
&none  &none     &none         &none       &none      &none     &none   &kp F4  &kp F5  &kp F6  &kp F10  &none
&none  &sk LWIN  &sk LEFT_ALT  &sk LSHIFT  &sk LCTRL  &none     &none   &kp F1  &kp F2  &kp F3  &kp F12  &none
                               &trans      &trans     &trans    &trans  &trans
                                           &none      &none     &none
            >;
        };

        Bluetooth {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none         &none         &none         &none       &none
&none  &none  &none  &none  &none  &none    &none  &none         &none         &none         &none       &none
&none  &none  &none  &none  &none  &none    &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &none
&none  &none  &none  &none  &none  &none    &none  &none         &none         &none         &none       &none
                     &none  &none  &none    &none  &none
                            &none  &none    &none
            >;
        };
    };
};
